builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
[[ "$(uname -s)" =~ ^CYGWIN*|MINGW*|MSYS* ]]
__vsc_is_windows=0
[[ "$HISTCONTROL" =~ .. ]]
__vsc_history_verify=1
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
__vsc_stable="$VSCODE_STABLE"
unset VSCODE_STABLE
[ "$__vsc_stable" = "0" ]
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
echo helo bash
echo hello bash
echo hello bash > stdout.txt
echo hello bash >> stdout.txt
echo hello bash > stdout.txt
> stdout.txt
bad_command
bad_command > stdout.txt
bad_command > stderr.txt
stderr >> stderr.txt
bad_command >> stderr.txt
bad_command 2> stderr.txt
echo hello bash > stdout.txt
read NAME
echo $NAME
echo $NAME >> stdout.txt
echo $NAME > stdout.txt
freeCodeCamp > name.txt
echo freeCodeCamp > name.txt
read name < stdin.txt
read name < name.txt
read NAME < name.txt
echo $NAME
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
[[ "$(uname -s)" =~ ^CYGWIN*|MINGW*|MSYS* ]]
__vsc_is_windows=0
[[ "$HISTCONTROL" =~ .. ]]
__vsc_history_verify=1
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
__vsc_stable="$VSCODE_STABLE"
unset VSCODE_STABLE
[ "$__vsc_stable" = "0" ]
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
echo IVAN
echo IVAN
echo $NAME
cat
cat name.txt
cat name.txt > name.txt
cat name.txt
cat name.txt < name.txt
cat < name.txt}
cat < name.txt
echo IVAN
touch scriptsh
touch script.sh
chmod -x script.sh
chmod +x script.sh
./script.sh
./script.sh
./script.sh
./script.sh
./script.sh
echo ivan
echo ivan
echo ivan
cat name.txt
./script.sh < name.txt
./script.sh < name.txt 2> stderr.txt
./script.sh < name.txt 2> stderr.txt > stdout.txt
./script.sh < name.txt 2> stderr.txt >> stdout.txt
./script.sh < name.txt 2> stderr.txt > stdout.txt
./script.sh < name.txt 2> stderr.txt > stdout.txt
./script.sh < name.txt 2> stderr.txt > stdout.txt
./script.sh < name.txt 2> stderr.txt > stdout.txt
./script.sh < name.txt 2> stderr.txt > stdout.txt
./script.sh < name.txt 2> stderr.txt > stdout.txt
./script.sh < name.txt 2> stderr.txt > stdout.txt
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
[[ "$(uname -s)" =~ ^CYGWIN*|MINGW*|MSYS* ]]
__vsc_is_windows=0
[[ "$HISTCONTROL" =~ .. ]]
__vsc_history_verify=1
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
__vsc_stable="$VSCODE_STABLE"
unset VSCODE_STABLE
[ "$__vsc_stable" = "0" ]
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
.
.
./script.sh < name.txt 2> stderr.txt > stdout.txt
cat kitty_ipsum_1.txt
cat kitty_ipsum_2.txt
wc kitty_ipsum_1.txt
man wc
wc kitty_ipsum_1.txt -l
wc kitty_ipsum_1.txt -w
wc kitty_ipsum_1.txt -c
man wc
wc kitty_ipsum_1.txt -m
wc kitty_ipsum_1.txt
cat kitty_ipsum_1.txt
cat kitty_ipsum_1.txt < wc
cat kitty_ipsum_1.txt > wc
wc < kitty_ipsum_1.txt
echo "~~ kitty_ipsum_1.txt info ~~" > kitty_info.txt
echo -e "\nNumber of lines:" >> kitty_info.txt
cat kitty_ipsum_1.txt
cat kitty_ipsum_1.txt
echo -e "\nNumber of words:" >> kitty_info.txt
cat kitty_ipsum_1.txt
echo -e "\nNumber of characters:" >> kitty_info.txt
cat kitty_ipsum_1.txt
wc -m < kitty_ipsum_1.txt >> kitty_info.txt
grep 'meow' kitty_ipsum_1.txt
man grep
__vsc_prompt_cmd_original
grep 'meow' kitty_ipsum_1.txt --color
man grep
grep 'meow' kitty_ipsum_1.txt --color -b
grep 'meow' kitty_ipsum_1.txt --color -n
grep meow[a-z]* kitty_ipsum_1.txt --color -n
echo -e "\nNumber of times meow or meowzer appears:" >> kitty_info.txt
grep meow[a-z]* kitty_ipsum_1.txt --color
grep meow[a-z]* kitty_ipsum_1.txt --c
grep meow[a-z]* kitty_ipsum_1.txt -c
man grep
grep meow[a-z]* kitty_ipsum_1.txt -o
grep meow[a-z]* kitty_ipsum_1.txt -o
grep meow[a-z]* kitty_ipsum_1.txt -o
grep meow[a-z]* kitty_ipsum_1.txt -o
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
[[ "$(uname -s)" =~ ^CYGWIN*|MINGW*|MSYS* ]]
__vsc_is_windows=0
[[ "$HISTCONTROL" =~ .. ]]
__vsc_history_verify=1
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
__vsc_stable="$VSCODE_STABLE"
unset VSCODE_STABLE
[ "$__vsc_stable" = "0" ]
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
echo "Lines that they appear on:" >> kitty_info.txt
echo -e "\nLines that they appear on:" >> kitty_info.txt
grep meow[a-z]
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
[[ "$(uname -s)" =~ ^CYGWIN*|MINGW*|MSYS* ]]
__vsc_is_windows=0
[[ "$HISTCONTROL" =~ .. ]]
__vsc_history_verify=1
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
__vsc_stable="$VSCODE_STABLE"
unset VSCODE_STABLE
[ "$__vsc_stable" = "0" ]
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
grep meow[a-z]* kitty_ipsum_1.txt -n
man grep
cat name.txt
sed 's/r/2/' name.txt
sed 's/free/f233/' name.txt
sed 's/freeCodeCamp/f233C0deC@amp/' name.txt
sed 's/freeCodeCamp/f233C0d3C@amp/' name.txt
sed 's/freecodecamp/f233C0d3C@amp/' name.txt
sed 's/freecodecamp/f233C0d3C@mp/' name.txt
sed 's/freecodecamp/f233C0d3C@mp/i' name.txt
name.txt 's/freecodecamp/f233C0d3C@mp/i' < sed
cat name.txt
sed 's/freecodecamp/f233C0d3C@mp/i' < name.txt
cat name.txt
grep meow[a-z]* kitty_ipsum_1.txt -n
grep meow[a-z]* kitty_ipsum_1.txt -n
grep meow[a-z]* kitty_ipsum_1.txt -n
man sed
grep meow[a-z]* kitty_ipsum_1.txt -n
grep meow[a-z]* kitty_ipsum_1.txt -n
grep meow[a-z]* kitty_ipsum_1.txt -n
grep meow[a-z]* kitty_ipsum_1.txt -n
grep meow[a-z]* kitty_ipsum_1.txt -n
grep meow[a-z]* kitty_ipsum_1.txt -n
grep meow[a-z]* kitty_ipsum_1.txt -n
grep cat[a-z]* kitty_ipsum_1.txt
grep cat[a-z]* kitty_ipsum_1.txt --color
echo -e "Number of times cat, cats, or catnip appears:" >> kitty_info.txt
echo -e "\nNumber of times cat, cats, or catnip appears:" >> kitty_info.txt
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
[[ "$(uname -s)" =~ ^CYGWIN*|MINGW*|MSYS* ]]
__vsc_is_windows=0
[[ "$HISTCONTROL" =~ .. ]]
__vsc_history_verify=1
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
__vsc_stable="$VSCODE_STABLE"
unset VSCODE_STABLE
[ "$__vsc_stable" = "0" ]
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
[[ "$(uname -s)" =~ ^CYGWIN*|MINGW*|MSYS* ]]
__vsc_is_windows=0
[[ "$HISTCONTROL" =~ .. ]]
__vsc_history_verify=1
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
__vsc_stable="$VSCODE_STABLE"
unset VSCODE_STABLE
[ "$__vsc_stable" = "0" ]
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
grep cat[a-z]* -n
grep cat[a-z]* -n kitty_ipsum_1.txt
grep cat[a-z]* -n kitty_ipsum_1.txo
grep cat[a-z]* -o kitty_ipsum_1.txt
grep cat[a-z]* -o kitty_ipsum_1.txt
grep cat[a-z]* -o kitty_ipsum_1.txt
grep cat[a-z]* -o kitty_ipsum_1.txt
grep cat[a-z]* -o kitty_ipsum_1.txt
grep cat[a-z]* -o kitty_ipsum_1.txt
grep cat[a-z]* -o kitty_ipsum_1.txt
man sed
echo -e "\nLines that they appear on:" >> kitty_info.txt
grep cat[a-z]* -o kitty_ipsum_1.txt
grep cat[a-z]* -o kitty_ipsum_1.txt
grep cat -o kitty_ipsum_1.txt
grep cat[a-z]* -n kitty_ipsum_1.txt
grep cat[a-z]* -n kitty_ipsum_1.txt
grep cat[a-z]* -n kitty_ipsum_1.txt
echo -e "\n\n~~ kitty_ipsum_2.txt info ~~" >> kitty_info.txt
echo -e "\nNumber of lines" >> kitty_info.txt
echo -e "\nNumber of lines:" >> kitty_info.txt
wc kitty_ipsum_2.txt -l >> kitty_info.txt
wc kitty_ipsum_2.txt -l
wc kitty_ipsum_2.txt -l
wc kitty_ipsum_2.txt -l
cat kitty_ipsum.txt
cat kitty_ipsum_2.txt
echo -e "\nNumber of words:" >> kitty_info.txt
cat kitty_ipsum_2.txt -m < wc >> kitty_info.txt
wc -m kitty_ipsum_2.txt < cat >> kitty_info.txt
wc -m < kitty_ipsum_2.txt >> kitty_info.txt
wc -w < kitty_ipsum_2.txt >> kitty_info.txt
echo -e "\nNumber of characters:" >> kitty_info.txt
cat kitty_ipsum_2.txt
grep meow[a-z]* kitty_ipsum_2.txt --color
echo -e "\nNumber of times meow or meowzer appears:" >> kitty_info.txt
grep meow[a-z]* -o kitty_ipsum_2.txt
grep meow[a-z]* -o kitty_ipsum_2.txt
grep meow[a-z]* -o kitty_ipsum_2.txt
echo -e "\nLines that they appear on:" >> kitty_info.txt
grep meow[a-z]* -m kitty_ipsum_2.txt
grep meow[a-z]* -n kitty_ipsum_2.txt
grep meow[a-z]* -n kitty_ipsum_2.txt
frep [cat]* --color kitty_ipsum_2.txt
grep [cat]* --color kitty_ipsum_2.txt
grep cat[a-z]* --color kitty_ipsum_2.txt
echo -e "\nNumber of times cat, cats, or catnip appears:" >> kitty_info.txt
grep cat[a-z]* -o
grep cat[a-z]* -o kitty_ipsum_2.txt
grep cat[a-z]* -o kitty_ipsum_2.txt
echo -e "\nLines that they appear on:" >> kitty_info.txt
grep cat[a-z]* -n kitty_ipsum_2.txt
touch translate.sh
chmod +x translate.sh
./translate.sh kitty_ipsum_1.txt
./translate.sh < kitty_ipsum_1.txt
echo kitty_ipsum.txt
kitty_ipsum.txt
cat kitty_ipsum_1.txt
./translate.sh kitty_ipsum_1.txt
grep dogchow --color kitty_ipsump_2.txt
grep dogchow --color kitty_ipsum_2.txt
grep dogchow -hco[a-z]*lor kitty_ipsum_2.txt
grep dogchow[a-z]* --color kitty_ipsum_2.txt
./translate.sh kitty_ipsum_1.txt
./translate.sh kitty_ipsum_1.txt
./translate.sh kitty_ipsum_1.txt
./translate.sh kitty_ipsum_1.txt
./translate.sh kitty_ipsum_1.txt
./translate.sh kitty_ipsum_1.txt
./translate.sh kitty_ipsum_1.txt
./translate.sh kitty_ipsum_1.txt
./translate.sh kitty_ipsum_1.txt
./translate.sh kitty_ipsum_2.txt
./translate.sh kitty_ipsum_1.txt
./translate.sh kitty_ipsum_1.txt > doggy_ipsum_1.txt
cat doggy_ipsum_1.txt
diff kitty_ipsum_1.txt doggy_ipsum_1.txt
man diff
man diff
diff kitty_ipsum_1.txt doggy_ipsum_1.txt --color
